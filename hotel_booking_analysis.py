# -*- coding: utf-8 -*-
"""Hotel Booking Analysis - Capstone Project Team notebook.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1o9NM17J6OwJzvuO9qnIRcDEWRnHqtLRK

## <b> Have you ever wondered when the best time of year to book a hotel room is? Or the optimal length of stay in order to get the best daily rate? What if you wanted to predict whether or not a hotel was likely to receive a disproportionately high number of special requests? This hotel booking dataset can help you explore those questions!

## <b>This data set contains booking information for a city hotel and a resort hotel, and includes information such as when the booking was made, length of stay, the number of adults, children, and/or babies, and the number of available parking spaces, among other things. All personally identifying information has been removed from the data. </b>

## <b> Explore and analyze the data to discover important factors that govern the bookings. </b>

**Importing the libraryes**
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

"""**Connecting to drive**"""

from google.colab import drive
drive.mount('/content/drive')

"""**Uploading Hotel Bookings csv dataset from drive**"""

hotel_data = pd.read_csv('/content/drive/MyDrive/almabetter capstone/EDA capstone project/Hotel Bookings (1).csv')

"""**Checking top ten rows from Hotel Bookings csv dataset**."""

hotel_data.head(10)

"""**Checking last ten rows from Hotel Bookings csv dataset**."""

hotel_data.tail(10)

"""**Data Exploration**

**Gathering the information from Hotel Bookings csv**.
"""

hotel_data.info()

"""**Data Description**

Understanding the whole dataset with help of column names. Given below is clearly mentioned.

1.   hotel : Name of hotels

1.   is_canceled : Indicating the booking was cancelled (1) or not cancelled (0)

1.   lead_time : Number of days that elapsed between the entering data of booking

1.   arrival_date_year : Year of arrival date

1.   arrival_date_month : Month of arrival date

1.   arrival_date_week_number : week number of year of arrival

1.   arrival_date_day_of_month : Day of arrival date

1.   stays_in_week_nights : The number of weekend nights ( saturday and sunday ) the guest stayed in hotel

2.   stays_in_week_nights : Number of week days ( monday to friday )the guest stayed in hotel

10.   adults : Number of adults stayed in hotel

11.   children : Number of childrens stayed in hotel

2.   babies : Number of babies stayed in hotel

2.   meal : type of meal booked by customers

2.   country : country of origin

2.   market_segments : 'TA' means travel agent and 'TO' means team operators

1.   distribution_channel : Booking distribution channel

1.   is_repeated_guest : Repeated guest (1) or not repeated guest (0)

2.   previous_cancellations : Number of booking that were cancelled by customers

2.   previous_bookings_not_canceled : Number of bookings that were not cancelled by customers

2.   reserved_room_type : Code is represented by room which is booked by customer

1.   assigned_room_type : code is type of room assigned to the booking

1.   booking_changes : Number of charges made to the booking

1.   deposit_type : Indicates on the customer made a deposit to guarantee the booking

1.   agent : ID for travel agency

1.   company : Company ID entity that made booking or responsable for booking payment

1.   days_in_waiting_list : Number of days from booking to conformation booking

2.   customer_type : booking assuming for four categories

2.   adr : Average daily rate sum of all loading transactions dividing by total number of staying nights

2.   required_car_parking_spaces : Car parking space required by customer

2.   total_of_special_requests : Total special requsts made by customer

2.   reservation_status : Reservation status, assuming in three categories

2.   reservation_status_date : Date of the last status was set




"""

hotel_data.describe()

"""**Checking count of rows and columns**."""

hotel_data.shape

"""**Checking how many number of unique values have in each columns**."""

hotel_data.nunique()   #checking how many unique values have in all columns

"""**checking unique values names from one column**."""

hotel_data['hotel'].unique()   # checking unic values names in a single column

"""**Data Cleaning**

**we are finding the null values from Hotel Bookings csv dataset**.
"""

hotel_data.isnull().sum()

"""**Droping the column on Hotel Bookings csv dataset because it have a more than 70 percentage of null values**."""

hotel_data.drop('company', axis=1, inplace=True)

"""**Replacing the null values**"""

hotel_data['children'].fillna('0',inplace=True)       # replacing na values into '0' in a children column
hotel_data['agent'].fillna('0',inplace=True)          # replacing na values into '0' in a agent column
hotel_data['country'].fillna('others', inplace=True)  # replacing null values into 'others' in a country column

hotel_data.isna().sum()

"""**checking for duplicate values with help of boolean type**.

---


"""

hotel_data.duplicated()     # checking for duplicates

"""**checking for duplicate values with help of visualization**."""

sns.countplot(x = hotel_data.duplicated())   #checking duplicates with help of vizualisation

"""**Relationship analysis**

**Checking correlaton between the columns**.
"""

correlation = hotel_data.corr()   # correlation matrix
correlation

"""**Correlation visualization by heatmap**."""

heatmap = sns.heatmap(correlation)  # correlatoin vizualizaton by heatmap

"""**Checking the relationship between all columns with help of pair plot**."""

sns.pairplot(hotel_data)

sns.distplot(hotel_data['lead_time'])

"""**Checking outliear with help of box plot**."""

sns.boxplot(hotel_data.lead_time)

"""**1.Which hotel is most preferred by customers?**"""

sns.countplot(x='hotel',data=hotel_data)

"""**ANS** :
Guest is most preferred by city hotel because city hotel has maximum bookings.

**2.Which month visitors visit highly?**
"""

sns.countplot(x='arrival_date_month', data=hotel_data)
plt.xticks(rotation=90)
plt.show()

"""**ANS** : August is one of the month got visitors highly visitors.

**3.Which type of room highly booked and preferred by customers?**
"""

sns.countplot(x=hotel_data['reserved_room_type'], data=hotel_data)

"""**ANS** : Code 'A' room are most prefered by customers because code 'A' room is highly booked by customers.

**4.Which year got a best sales on both hotels?**
"""

sns.countplot(x='arrival_date_year',data=hotel_data)

"""**ANS** : In 3 years of data we got 2016 year of sales is higher than 2015 and 2017.

**5.Which hotel mostly cancelled by the customers?**
"""

sns.barplot(x=hotel_data['is_canceled'],y=hotel_data['hotel'])
plt.show()

"""**ANS** : After booking city hotel is mostly cancelled by customers.

**6.Which type of customers highly visited on both hotels?**
"""

sns.countplot(x='customer_type', data=hotel_data)
plt.xticks(rotation=90)
plt.show()

"""**ANS** : Transient type of customer is highly visite on both hotels.

**7.What is the percentage of repeated guest?**
"""

hotel_data['is_repeated_guest'].value_counts().plot.pie(explode=[0.05,0.05],
                                     autopct='%2.1f%%',
                                     shadow=True)
plt.title('(%) percentage of repeated guest on both hotels')
plt.show()

"""**ANS** : 3.2% percentage of customers are repeated guest.

**8.What is the percentage distribution of deposite type?**
"""

hotel_data['deposit_type'].value_counts().plot.pie(explode=[0.05,0.05,0.05],
                                     autopct='%2.1f%%',
                                     shadow=True)
plt.title('(%) percentage of deposit type on both hotels')
plt.show()

"""**ANS** : 87.6% percentage is deposite type on both hotels.

**Conclusion** : We used the dataset that contains data about hotel bookings. We solved the challenges that we faced while performing the project. It took us a lot of time to get the solution of questions that we performed in our colab notebook. After cleaning the data we simply grabbed. We had to understand the whole data first and cleaning the data then we performed the Exploratory Data Analysis to get the answer of our questions.
"""